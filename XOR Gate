//VERILOG CODE FOR XOR CODE
module xor_gate(
    input wire a,
    input wire b,
    output wire y
);
assign y = a ^ b;
endmodule

//TESTBENCH CODE
module tb_xor_gate;
// Declare testbench variables
reg a;
reg b;
wire y;

// Instantiate the XOR gate module
xor_gate uut (
    .a(a),
    .b(b),
    .y(y)
);

// Test procedure
initial begin
  
  $dumpfile("test.vcd");
  $dumpvars(1);
    // Display header
    $display("Time\t a b | y");
    $display("----------------");

    // Apply test vectors
    a = 0; b = 0; #10;
    $display("%4d\t %b %b | %b", $time, a, b, y);

    a = 0; b = 1; #10;
    $display("%4d\t %b %b | %b", $time, a, b, y);

    a = 1; b = 0; #10;
    $display("%4d\t %b %b | %b", $time, a, b, y);

    a = 1; b = 1; #10;
    $display("%4d\t %b %b | %b", $time, a, b, y);

    // Finish simulation
    $finish;
end

endmodule
